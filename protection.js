// üîí –ó–ê–©–ò–¢–ê –û–¢ –ö–†–ê–ñ–ò –ö–û–î–ê - AEZA BIO
// –ê–≤—Ç–æ—Ä: AEZA
// –í–µ—Ä—Å–∏—è: 2.0
// –î–∞—Ç–∞: 2024

(function() {
    'use strict';
    
    // üîê –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞—â–∏—Ç—ã
    const PROTECTION_CONFIG = {
        author: 'AEZA',
        version: '2.0',
        domain: window.location.hostname,
        timestamp: Date.now(),
        checks: {
            devTools: true,
            rightClick: true,
            copyPaste: true,
            viewSource: true,
            console: true,
            inspect: true
        }
    };

    // üõ°Ô∏è –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ø—ã—Ç–æ–∫ –≤–∑–ª–æ–º–∞
    function logAttempt(type, details) {
        const logData = {
            type: type,
            details: details,
            timestamp: new Date().toISOString(),
            userAgent: navigator.userAgent,
            url: window.location.href,
            referrer: document.referrer
        };
        
        // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if (typeof window.reportAttack === 'function') {
            window.reportAttack(logData);
        }
        
        // –õ–æ–∫–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        console.warn('üö® –ü–æ–ø—ã—Ç–∫–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è –∑–∞—â–∏—Ç—ã:', logData);
    }

    // üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ DevTools
    function checkDevTools() {
        const threshold = 160;
        const widthThreshold = window.outerWidth - window.innerWidth > threshold;
        const heightThreshold = window.outerHeight - window.innerHeight > threshold;
        
        if (widthThreshold || heightThreshold) {
            logAttempt('devtools', { widthThreshold, heightThreshold });
            document.body.innerHTML = '<div style="text-align:center;padding:50px;color:#ff4444;font-family:monospace;"><h1>üö® –î–û–°–¢–£–ü –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù</h1><p>–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞</p></div>';
            return false;
        }
        return true;
    }

    // üñ±Ô∏è –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø—Ä–∞–≤–æ–≥–æ –∫–ª–∏–∫–∞ (—É–∂–µ –≤–∫–ª—é—á–µ–Ω–∞ –≤ –∞–Ω—Ç–∏–ø–∞—Å—Ç–∏–Ω–≥)
    function blockRightClick() {
        // –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, –Ω–æ –ª–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –≤ blockCopyPaste
        return true;
    }

    // üìã –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∞–Ω—Ç–∏–ø–∞—Å—Ç–∏–Ω–≥
    function blockCopyPaste() {
        // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
        document.addEventListener('copy', function(e) {
            e.preventDefault();
            logAttempt('copy', { selection: window.getSelection().toString() });
            return false;
        });
        
        document.addEventListener('cut', function(e) {
            e.preventDefault();
            logAttempt('cut', {});
            return false;
        });
        
        // –ê–Ω—Ç–∏–ø–∞—Å—Ç–∏–Ω–≥ - –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤—Å—Ç–∞–≤–∫–∏
        document.addEventListener('paste', function(e) {
            e.preventDefault();
            logAttempt('paste', {});
            return false;
        });
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç –≤—Å—Ç–∞–≤–∫–∏ —á–µ—Ä–µ–∑ input/textarea
        document.addEventListener('paste', function(e) {
            if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') {
                e.preventDefault();
                logAttempt('paste_input', { target: e.target.tagName });
                return false;
            }
        });
        
        // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ drag & drop
        document.addEventListener('drop', function(e) {
            e.preventDefault();
            logAttempt('drop', {});
            return false;
        });
        
        // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤—ã–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
        document.addEventListener('selectstart', function(e) {
            e.preventDefault();
            logAttempt('select', {});
            return false;
        });
        
        // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤—ã–¥–µ–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ CSS
        document.body.style.userSelect = 'none';
        document.body.style.webkitUserSelect = 'none';
        document.body.style.mozUserSelect = 'none';
        document.body.style.msUserSelect = 'none';
        
        // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        document.addEventListener('contextmenu', function(e) {
            e.preventDefault();
            logAttempt('contextmenu', { target: e.target.tagName });
            return false;
        });
    }

    // üîç –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞
    function blockViewSource() {
        document.addEventListener('keydown', function(e) {
            // Ctrl+U, F12, Ctrl+Shift+I, Ctrl+Shift+J, Ctrl+Shift+C
            if (
                (e.ctrlKey && e.key === 'u') ||
                e.key === 'F12' ||
                (e.ctrlKey && e.shiftKey && e.key === 'I') ||
                (e.ctrlKey && e.shiftKey && e.key === 'J') ||
                (e.ctrlKey && e.shiftKey && e.key === 'C')
            ) {
                e.preventDefault();
                logAttempt('viewsource', { key: e.key, ctrl: e.ctrlKey, shift: e.shiftKey });
                return false;
            }
        });
    }

    // üö´ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–æ–Ω—Å–æ–ª–∏
    function blockConsole() {
        const originalLog = console.log;
        const originalWarn = console.warn;
        const originalError = console.error;
        
        console.log = function(...args) {
            logAttempt('console_log', { args: args });
            return originalLog.apply(console, args);
        };
        
        console.warn = function(...args) {
            logAttempt('console_warn', { args: args });
            return originalWarn.apply(console, args);
        };
        
        console.error = function(...args) {
            logAttempt('console_error', { args: args });
            return originalError.apply(console, args);
        };
    }

    // üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Å–ø–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    function checkInspect() {
        let devtools = { open: false, orientation: null };
        
        setInterval(() => {
            if (window.outerHeight - window.innerHeight > 200 || window.outerWidth - window.innerWidth > 200) {
                if (!devtools.open) {
                    devtools.open = true;
                    logAttempt('inspect', { orientation: devtools.orientation });
                    document.body.innerHTML = '<div style="text-align:center;padding:50px;color:#ff4444;font-family:monospace;"><h1>üö® –î–û–°–¢–£–ü –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù</h1><p>–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏–Ω—Å–ø–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤</p></div>';
                }
            } else {
                devtools.open = false;
            }
        }, 500);
    }

    // üõ°Ô∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
    function additionalChecks() {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ iframe
        if (window.self !== window.top) {
            logAttempt('iframe', { top: window.top.location.href });
            window.top.location.href = window.self.location.href;
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã
        document.addEventListener('keydown', function(e) {
            if (e.key === 'PrintScreen' || (e.ctrlKey && e.key === 'p')) {
                e.preventDefault();
                logAttempt('screenshot', { key: e.key });
                return false;
            }
        });
    }

    // üîÑ –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
    function continuousMonitoring() {
        setInterval(() => {
            checkDevTools();
        }, 1000);
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ DOM
        const observer = new MutationObserver(function(mutations) {
            mutations.forEach(function(mutation) {
                if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã
                    mutation.addedNodes.forEach(function(node) {
                        if (node.tagName === 'SCRIPT' && node.src && !node.src.includes(window.location.hostname)) {
                            logAttempt('external_script', { src: node.src });
                            node.remove();
                        }
                    });
                }
            });
        });
        
        observer.observe(document.body, {
            childList: true,
            subtree: true
        });
    }

    // üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞—â–∏—Ç—ã
    function initProtection() {
        console.log('üõ°Ô∏è –ó–∞—â–∏—Ç–∞ AEZA BIO –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞');
        
        if (PROTECTION_CONFIG.checks.devTools) {
            checkDevTools();
        }
        
        if (PROTECTION_CONFIG.checks.rightClick) {
            blockRightClick();
        }
        
        if (PROTECTION_CONFIG.checks.copyPaste) {
            blockCopyPaste();
        }
        
        if (PROTECTION_CONFIG.checks.viewSource) {
            blockViewSource();
        }
        
        if (PROTECTION_CONFIG.checks.console) {
            blockConsole();
        }
        
        if (PROTECTION_CONFIG.checks.inspect) {
            checkInspect();
        }
        
        additionalChecks();
        continuousMonitoring();
    }

    // üéØ –ó–∞–ø—É—Å–∫ –∑–∞—â–∏—Ç—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initProtection);
    } else {
        initProtection();
    }

    // üåê –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞
    window.AEZA_PROTECTION = {
        config: PROTECTION_CONFIG,
        logAttempt: logAttempt,
        checkDevTools: checkDevTools
    };

})();